{
  "name": "onetime-backend",
  "version": "1.0.0",
  "description": "OneTime Dating App Backend - MongoDB + Express + Socket.io",
  "main": "server.js",
  "scripts": {
    "start": "node server-production-minimal.js",
    "dev": "nodemon server-production-minimal.js",
    "prod": "node server-production-minimal.js",
    "start:test": "node server-step1.js",
    "dev:test": "nodemon server-step1.js",
    
    "test": "jest",
    "test:unit": "jest --selectProjects unit",
    "test:integration": "jest --selectProjects integration",
    "test:e2e": "jest --selectProjects e2e",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage --coverageReporters=text-lcov",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:performance": "node tests/performance/run-performance-tests.js",
    "test:load": "artillery run tests/load/load-test.yml",
    "test:migrations": "node tests/migrations/test-migrations.js",
    "test:indexes": "node tests/migrations/test-indexes.js",
    "test:smoke:staging": "node tests/smoke/staging-smoke.js",
    "test:smoke:production": "node tests/smoke/production-smoke.js",
    
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write \"**/*.{js,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,json,md}\"",
    
    "build": "npm run lint && npm run test:ci",
    "build:docker": "docker build -t onetime-backend .",
    "build:production": "NODE_ENV=production npm run build",
    
    "seed": "node scripts/seedDatabase.js",
    "seed:dev": "NODE_ENV=development node scripts/seedDatabase.js",
    "seed:staging": "NODE_ENV=staging node scripts/seedDatabase.js",
    "seed:test": "NODE_ENV=test node scripts/seedTestData.js",
    
    "migrate": "node scripts/migrateDatabase.js",
    "migrate:up": "node scripts/migrateDatabase.js up",
    "migrate:down": "node scripts/migrateDatabase.js down",
    "migrate:status": "node scripts/migrateDatabase.js status",
    
    "indexes": "node scripts/createIndexes.js",
    "indexes:create": "node scripts/createIndexes.js create",
    "indexes:drop": "node scripts/createIndexes.js drop",
    "indexes:rebuild": "node scripts/createIndexes.js rebuild",
    
    "cleanup": "node scripts/cleanupExpiredData.js",
    "cleanup:daily": "node scripts/cleanupExpiredData.js --daily",
    "cleanup:weekly": "node scripts/cleanupExpiredData.js --weekly",
    
    "backup": "node scripts/backupDatabase.js",
    "backup:full": "node scripts/backupDatabase.js --full",
    "backup:incremental": "node scripts/backupDatabase.js --incremental",
    
    "health": "node scripts/healthCheck.js",
    "health:detailed": "node scripts/healthCheck.js --detailed",
    "monitor": "node scripts/monitorSystem.js",
    
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "security:scan": "node scripts/securityScan.js",
    
    "docs:generate": "node scripts/generateApiDocs.js",
    "docs:serve": "node scripts/serveApiDocs.js",
    
    "deploy:staging": "npm run test && npm run lint && NODE_ENV=staging npm start",
    "deploy:production": "npm run test && npm run lint && NODE_ENV=production npm start",
    
    "docker:build": "docker build -t onetime-backend .",
    "docker:run": "docker run -p 3000:3000 --env-file .env onetime-backend",
    "docker:run:dev": "docker run -p 3000:3000 --env-file .env.development onetime-backend",
    "docker:push": "docker push onetime-backend:latest",
    
    "analyze": "node scripts/analyzeCodeQuality.js",
    "analyze:dependencies": "node scripts/analyzeDependencies.js",
    "analyze:performance": "node scripts/analyzePerformance.js",
    
    "precommit": "npm run lint && npm run test:unit",
    "prepush": "npm run test:integration",
    "preversion": "npm run test:ci && npm run lint",
    "postversion": "git push && git push --tags"
  },
  "dependencies": {
    "express": "^4.18.2",
    "mongoose": "^8.0.3",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "multer": "^1.4.5-lts.1",
    "cloudinary": "^1.41.0",
    "socket.io": "^4.7.4",
    "nodemailer": "^6.9.7",
    "twilio": "^4.19.0",
    "winston": "^3.11.0",
    "compression": "^1.7.4",
    "dotenv": "^16.3.1",
    "joi": "^17.11.0",
    "moment": "^2.29.4",
    "geolib": "^3.3.4",
    "sharp": "^0.32.6",
    "redis": "^4.6.10",
    "multer-storage-cloudinary": "^4.0.0",
    "apn": "^2.2.0",
    "firebase-admin": "^12.0.0",
    "node-fetch": "^3.3.2",
    "geoip-lite": "^1.4.10",
    "stripe": "^14.10.0",
    "@tensorflow/tfjs-node": "^4.15.0",
    "speakeasy": "^2.0.0",
    "node-cache": "^5.1.2",
    "ioredis": "^5.3.2",
    "@socket.io/redis-adapter": "^8.2.1",
    "bull": "^4.12.2",
    "pino": "^8.16.1",
    "pino-pretty": "^10.2.3"
  },
  "devDependencies": {
    "nodemon": "^3.0.2",
    "jest": "^29.7.0",
    "jest-extended": "^4.0.2",
    "jest-junit": "^16.0.0",
    "jest-html-reporters": "^3.1.5",
    "jest-serializer-html": "^5.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "supertest": "^6.3.3",
    "mongodb-memory-server": "^9.1.3",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-jest": "^27.6.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-security": "^1.7.1",
    "prettier": "^3.1.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "artillery": "^2.0.3",
    "clinic": "^13.0.0",
    "autocannon": "^7.12.0",
    "nyc": "^15.1.0",
    "@types/node": "^20.9.2",
    "axios": "^1.6.2",
    "faker": "^6.6.6",
    "chai": "^4.3.10",
    "sinon": "^17.0.1",
    "nock": "^13.4.0",
    "cross-env": "^7.0.3",
    "rimraf": "^5.0.5"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test:unit"
    }
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "prettier --write",
      "git add"
    ],
    "*.{json,md}": [
      "prettier --write",
      "git add"
    ]
  },
  "jest-junit": {
    "outputDirectory": "./test-results",
    "outputName": "junit.xml"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/onetime/backend.git"
  },
  "keywords": [
    "dating-app",
    "express",
    "mongodb",
    "socket.io",
    "nodejs",
    "api",
    "backend",
    "rest",
    "real-time",
    "mobile"
  ],
  "author": "OneTime Team",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/onetime/backend/issues"
  },
  "homepage": "https://github.com/onetime/backend#readme"
}